{"ast":null,"code":"import _classCallCheck from \"/home/ben/Documents/React/paris-js-0918-groupe2-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ben/Documents/React/paris-js-0918-groupe2-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ben/Documents/React/paris-js-0918-groupe2-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ben/Documents/React/paris-js-0918-groupe2-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ben/Documents/React/paris-js-0918-groupe2-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ben/Documents/React/paris-js-0918-groupe2-react/src/components/Autosuggestnow.js\";\nimport React, { Component } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport \"./autosuggest.css\";\n\nvar escapeRegexCharacters = function escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\n\nvar getSuggestions = function getSuggestions(value, data) {\n  var escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === \"\") {\n    return [];\n  }\n\n  var regex = new RegExp(\"^\" + escapedValue, \"i\");\n  return data.filter(function (file) {\n    return regex.test(file.denomination_sociale);\n  });\n};\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.denomination_sociale;\n};\n\nvar renderSuggestion = function renderSuggestion(suggestion) {\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, suggestion.denomination_sociale);\n};\n\nvar Autosuggestnow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Autosuggestnow, _Component);\n\n  function Autosuggestnow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Autosuggestnow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Autosuggestnow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: \"\",\n      suggestions: []\n    };\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue,\n          method = _ref.method;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n      var creanciers = _this.props.creanciers;\n      var debiteurs = _this.props.debiteurs;\n\n      if (creanciers !== undefined) {\n        _this.setState({\n          suggestions: getSuggestions(value, creanciers)\n        });\n      } else if (debiteurs !== undefined) {\n        _this.setState({\n          suggestions: getSuggestions(value, debiteurs)\n        });\n      }\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Autosuggestnow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions;\n      var inputProps = {\n        placeholder: \"Entrer le nom d'un créancier\",\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Autosuggestnow;\n}(Component);\n\nexport default Autosuggestnow;","map":{"version":3,"sources":["/home/ben/Documents/React/paris-js-0918-groupe2-react/src/components/Autosuggestnow.js"],"names":["React","Component","Autosuggest","escapeRegexCharacters","str","replace","getSuggestions","value","data","escapedValue","trim","regex","RegExp","filter","file","test","denomination_sociale","getSuggestionValue","suggestion","renderSuggestion","Autosuggestnow","state","suggestions","onChange","event","newValue","method","setState","onSuggestionsFetchRequested","creanciers","props","debiteurs","undefined","onSuggestionsClearRequested","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport \"./autosuggest.css\";\n\nconst escapeRegexCharacters = str => {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n};\n\nconst getSuggestions = (value, data) => {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  if (escapedValue === \"\") {\n    return [];\n  }\n  const regex = new RegExp(\"^\" + escapedValue, \"i\");\n  return data.filter(file => regex.test(file.denomination_sociale));\n};\n\nconst getSuggestionValue = suggestion => {\n  return suggestion.denomination_sociale;\n};\n\nconst renderSuggestion = suggestion => {\n  return <span>{suggestion.denomination_sociale}</span>;\n};\n\nclass Autosuggestnow extends Component {\n  state = {\n    value: \"\",\n    suggestions: []\n  };\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    const creanciers = this.props.creanciers;\n    const debiteurs = this.props.debiteurs;\n    if (creanciers !== undefined) {\n      this.setState({\n        suggestions: getSuggestions(value, creanciers)\n      });\n    } else if (debiteurs !== undefined) {\n      this.setState({\n        suggestions: getSuggestions(value, debiteurs)\n      });\n    }\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n    const inputProps = {\n      placeholder: \"Entrer le nom d'un créancier\",\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\nexport default Autosuggestnow;\n"]},"metadata":{},"sourceType":"module"}